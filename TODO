BUG:
ormap: expects type <proper list> as 2nd argument, given: #f; other arguments were: #<procedure:aux>

 === context ===
/home/dyoo/work/divascheme/traversal.ss:290:2: find-pos-sibling-forward
/home/dyoo/work/divascheme/actions.ss:390:2: command
/home/dyoo/work/divascheme/interpreter.ss:482:2: eval-InsertRope
/home/dyoo/work/divascheme/interpreter.ss:55:2: interpreter/extension
/home/dyoo/work/divascheme/diva-link.ss:307:6: interpreter/imperative
/home/dyoo/work/divascheme/diva-link.ss:303:6: set-mred/handlers
/home/dyoo/work/divascheme/insert-keymap.ss:377:8: eval-text
/home/dyoo/work/divascheme/insert-keymap.ss:452:8: consume&exit
/home/dyoo/work/divascheme/diva-link.ss:488:6: to-normal-mode method in ...ascheme/diva-link.ss:116:4
/home/dyoo/work/divascheme/diva-link.ss:57:6: shutdown
/home/dyoo/work/divascheme/diva-central.ss:83:6: switch-off method in diva-central%
/home/dyoo/local/plt/collects/scheme/private/more-scheme.ss:155:2: call-with-break-parameterization
/home/dyoo/local/plt/collects/scheme/private/more-scheme.ss:260:2: call-with-exception-handler



BUG: tab completion doesn't work on keywords.


BUGS: should reopen the previous STAGS file between boots.


Can we lower all the DivaScheme widgets to the status bar proper and save screen estate?

BUG: Switching tab back to a text mode tab re-enables DivaScheme on that text tab. It should stay disabled.

BUG: if selection is larger than one s-expression, insert-after
inserts between the first and second s-expressions.


BUG: control-[ inserts a literal [ in command mode, as well as meta-[.
We have to block these or handle them in a nice way.


BUG: in insert mode, user should not be allowed to type a semicolon unless they are in a context that allows it, like strings or in an escape sequence.  Otherwise, it can break structure.
     

Add simple command in install.ss to upgrade the keybindings of a user
to contextual parens if they ask for it.

BUG: trying to enter in a vector with the keys #() causes
erroneous output #(()).  Why?



BUG:

inserting characters like \#[ or \#( isn't working properly.

    - somewhat fixed, but whitespace cleanup is doing something funky around it.  It's
    because, when typing: 

    "#\[ hello"
        
    it looks like an open paren and so the space between "#\[" and "hello" is stripped out.
    The problem has to do with cleanup-whitespace.  But cleanup-whitespace is broken
    in a few ways already: I really do need to look at it more closely to see how to fix it.




Should centralize all string constants in a single file.

Should consolidate related behavior that's currently sprinkled
in many files.

    stags-lib.ss and tag-reader.ss


Jon Rafkind:

* it would be nice if shift-t would transpose the current sexp with the
next sexp, as t transposes it with the previous one

    - Address using keyboard macros.  Need to look at DrScheme to allow
      ESC as part of macro sequence.

* hitting backspace when the current token is empty should go back to
the last token and edit that instead. If I type "fo bar" and realize I
meant "foo" I have to go back to command mode, move to 'fo' and edit it.
It would be easier to hit backspace 3 times, erasing 'bar' and edit 'fo'
directly.

    - yes, agreed.

    



Guillaume Marceau:

sources on readable public svn

    - write a script that updates the plt web site with latest sources.
    - maybe add mirrored svn on hashcollision.org
    
add an link to the high-res movie on the web page

    - dyoo: do this
    - done, on test site under new/.  Ready to deploy as soon as release is ready.



I think ctrl-space should auto-complete too. Also, Eclipse
auto-completes on space+space. Aka, space on an empty token
auto-completes the previous token.

    - still broken, needs fixing


clicking should work in insert mode. it should exit insert then move
losing focus to go read the help desk, for example, should not leave insert mode

     - yeah, this would be good.  next release



We should accomodate both emacs and bash style auto-completion. In fact I think mozrepl has it even better.
     


Mon Mar 27 03:50:11 2006  --- Guillaume

- the mark should disapear after edits, pressing shift-M after each bring is annoying

- bring is broken at the moment

   bring's functionality is sorta fixed


- previous should stay available
- make keyboard searches interactive and colored (like Emacs)
- previous/next are backward for search-backward and search-bottom
- the input box should allow pasting
- it should be possible to search for the item under the cursor

- _search_ should take multiple arguments ("search define bind")

- magic should look for completion in the other open tabs and the repl

- cleanup-whitespace breaks on multilines string, or pipe, or any atomic multilines 
    ---> solution: before calling cleanup-whitespace, we should ask which object in under the cursor, 
    and if it is an atomic, then returns the end position of this atom to cleanup-whitespace

- cleanup-whitespace should insert missing space

- a command "go to line"

   already exists in DrScheme under meta-p for "go to position".

- a command to center the text in the window

        
Preference box should have options for templates.


DivaScheme should be aware of editor modes and pause if we're editing in text.

Misspelling a function name when editing key bindings fails silently, it should indicate that there is a problem.

The transpose in the DrScheme should let you chain