Known bugs and issues after 2.3 release:

Bug:

"#(())".  Press K when highlighting the inner parens.  We see:

ormap: expects type <proper list> as 2nd argument, given: #f; other arguments were: #<procedure:aux>

 === context ===
find-pos/end
/Users/dyoo/work/divascheme/interpreter.ss:723:2: eval-Non-blank-out
/Users/dyoo/work/divascheme/interpreter.ss:55:2: interpreter/extension
/Users/dyoo/work/divascheme/diva-link.ss:307:6: interpreter/imperative
/Users/dyoo/work/divascheme/diva-link.ss:298:6: get&set-mred/handlers
/Users/dyoo/local/plt/collects/scheme/private/more-scheme.ss:155:2: call-with-break-parameterization
/Users/dyoo/local/plt/collects/scheme/private/more-scheme.ss:260:2: call-with-exception-handler





#lang does not interact well; a file using it or a #reader extension
gives wacky positional information making it infuriating to edit code.
I think the parser isn't generating the correct locations.


Typo in preferences for "dive:end" which should really be "diva:last".
We need to automatically repair people's preferences in the installer.


Closing a "---" that doesn't have an $expr$ holder kills an sexpr that
probably shouldn't die.


Copy and paste from the interaction window, before the last unread
point, runs into our munger.  Proper fix is to have parsing work on
the real text rope, and have the parser be aware of last-unread-point
instead.

Check syntax in insert mode does not defocus as it should.  All of the
button presses should get us out of insert mode.

    - I couldn't get this to work, so as a workaround I disable Check
    Syntax while in insert mode.  See diva-link.ss's to-command-mode
    for details.


When multiple expressions are selected, insert after places the cursor
after the first sexpression selected rather than the last.



Major slowness on large files.

    - identified as parser.
    - but there are other areas of concern.  replace/selection is a
      major culprit, as well as cleanup/whitespace.



Cursor motion:
map: expects type <proper list> as 2nd argument, given: #f; other arguments were: #<procedure:aux>

 === context ===
/home/dyoo/work/divascheme/traversal.ss:164:5
/home/dyoo/work/divascheme/interpreter.ss:655:2: eval-column-motion
/home/dyoo/work/divascheme/diva-link.ss:315:6: interpreter/imperative
/home/dyoo/work/divascheme/diva-link.ss:306:6: get&set-mred/handlers
call-with-break-parameterization

   - not sure how this is happening, or if it still is a problem: I've
changed the syntax list implemenation to compute lazily now, so it
should never be visible as #f from traversal.ss.
